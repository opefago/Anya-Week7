/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RCToken, RCTokenInterface } from "../RCToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021a5380380620021a5833981810160405281019062000037919062000428565b6040518060400160405280601581526020017f52657761726420436f6e747261637420546f6b656e00000000000000000000008152506040518060400160405280600381526020017f52435400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000361565b508060049080519060200190620000d492919062000361565b505050620000f7620000eb6200011060201b60201c565b6200011860201b60201c565b620001093382620001de60201b60201c565b506200061a565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000248906200048c565b60405180910390fd5b62000265600083836200035760201b60201c565b8060026000828254620002799190620004dc565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002d09190620004dc565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003379190620004ae565b60405180910390a362000353600083836200035c60201b60201c565b5050565b505050565b505050565b8280546200036f9062000543565b90600052602060002090601f016020900481019282620003935760008555620003df565b82601f10620003ae57805160ff1916838001178555620003df565b82800160010185558215620003df579182015b82811115620003de578251825591602001919060010190620003c1565b5b509050620003ee9190620003f2565b5090565b5b808211156200040d576000816000905550600101620003f3565b5090565b600081519050620004228162000600565b92915050565b6000602082840312156200043b57600080fd5b60006200044b8482850162000411565b91505092915050565b600062000463601f83620004cb565b91506200047082620005d7565b602082019050919050565b620004868162000539565b82525050565b60006020820190508181036000830152620004a78162000454565b9050919050565b6000602082019050620004c560008301846200047b565b92915050565b600082825260208201905092915050565b6000620004e98262000539565b9150620004f68362000539565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200052e576200052d62000579565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200055c57607f821691505b60208210811415620005735762000572620005a8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200060b8162000539565b81146200061757600080fd5b50565b611b7b806200062a6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d71461029d578063a9059cbb146102cd578063dd62ed3e146102fd578063f2fde38b1461032d57610100565b8063715018a61461023b5780638da5cb5b1461024557806395d89b41146102635780639dc29fac1461028157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101ef57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610349565b60405161011a919061142e565b60405180910390f35b61013d600480360381019061013891906111a3565b6103db565b60405161014a9190611413565b60405180910390f35b61015b6103fe565b60405161016891906115d0565b60405180910390f35b61018b60048036038101906101869190611154565b610408565b6040516101989190611413565b60405180910390f35b6101a9610437565b6040516101b691906115eb565b60405180910390f35b6101d960048036038101906101d491906111a3565b610440565b6040516101e69190611413565b60405180910390f35b610209600480360381019061020491906111a3565b610477565b005b610225600480360381019061022091906110ef565b61048d565b60405161023291906115d0565b60405180910390f35b6102436104d5565b005b61024d6104e9565b60405161025a91906113f8565b60405180910390f35b61026b610513565b604051610278919061142e565b60405180910390f35b61029b600480360381019061029691906111a3565b6105a5565b005b6102b760048036038101906102b291906111a3565b6105bb565b6040516102c49190611413565b60405180910390f35b6102e760048036038101906102e291906111a3565b610632565b6040516102f49190611413565b60405180910390f35b61031760048036038101906103129190611118565b610655565b60405161032491906115d0565b60405180910390f35b610347600480360381019061034291906110ef565b6106dc565b005b60606003805461035890611734565b80601f016020809104026020016040519081016040528092919081815260200182805461038490611734565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b6000806103e6610760565b90506103f3818585610768565b600191505092915050565b6000600254905090565b600080610413610760565b9050610420858285610933565b61042b8585856109bf565b60019150509392505050565b60006012905090565b60008061044b610760565b905061046c81858561045d8589610655565b6104679190611622565b610768565b600191505092915050565b61047f610c40565b6104898282610cbe565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104dd610c40565b6104e76000610e1e565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461052290611734565b80601f016020809104026020016040519081016040528092919081815260200182805461054e90611734565b801561059b5780601f106105705761010080835404028352916020019161059b565b820191906000526020600020905b81548152906001019060200180831161057e57829003601f168201915b5050505050905090565b6105ad610c40565b6105b78282610ee4565b5050565b6000806105c6610760565b905060006105d48286610655565b905083811015610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061090611590565b60405180910390fd5b6106268286868403610768565b60019250505092915050565b60008061063d610760565b905061064a8185856109bf565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106e4610c40565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b90611490565b60405180910390fd5b61075d81610e1e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90611570565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f906114b0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161092691906115d0565b60405180910390a3505050565b600061093f8484610655565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109b957818110156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a2906114d0565b60405180910390fd5b6109b88484848403610768565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2690611550565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690611450565b60405180910390fd5b610aaa8383836110bb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b27906114f0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc39190611622565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c2791906115d0565b60405180910390a3610c3a8484846110c0565b50505050565b610c48610760565b73ffffffffffffffffffffffffffffffffffffffff16610c666104e9565b73ffffffffffffffffffffffffffffffffffffffff1614610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb390611510565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d25906115b0565b60405180910390fd5b610d3a600083836110bb565b8060026000828254610d4c9190611622565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610da19190611622565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e0691906115d0565b60405180910390a3610e1a600083836110c0565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4b90611530565b60405180910390fd5b610f60826000836110bb565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fe6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdd90611470565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461103d9190611678565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110a291906115d0565b60405180910390a36110b6836000846110c0565b505050565b505050565b505050565b6000813590506110d481611b17565b92915050565b6000813590506110e981611b2e565b92915050565b60006020828403121561110157600080fd5b600061110f848285016110c5565b91505092915050565b6000806040838503121561112b57600080fd5b6000611139858286016110c5565b925050602061114a858286016110c5565b9150509250929050565b60008060006060848603121561116957600080fd5b6000611177868287016110c5565b9350506020611188868287016110c5565b9250506040611199868287016110da565b9150509250925092565b600080604083850312156111b657600080fd5b60006111c4858286016110c5565b92505060206111d5858286016110da565b9150509250929050565b6111e8816116ac565b82525050565b6111f7816116be565b82525050565b600061120882611606565b6112128185611611565b9350611222818560208601611701565b61122b816117c4565b840191505092915050565b6000611243602383611611565b915061124e826117d5565b604082019050919050565b6000611266602283611611565b915061127182611824565b604082019050919050565b6000611289602683611611565b915061129482611873565b604082019050919050565b60006112ac602283611611565b91506112b7826118c2565b604082019050919050565b60006112cf601d83611611565b91506112da82611911565b602082019050919050565b60006112f2602683611611565b91506112fd8261193a565b604082019050919050565b6000611315602083611611565b915061132082611989565b602082019050919050565b6000611338602183611611565b9150611343826119b2565b604082019050919050565b600061135b602583611611565b915061136682611a01565b604082019050919050565b600061137e602483611611565b915061138982611a50565b604082019050919050565b60006113a1602583611611565b91506113ac82611a9f565b604082019050919050565b60006113c4601f83611611565b91506113cf82611aee565b602082019050919050565b6113e3816116ea565b82525050565b6113f2816116f4565b82525050565b600060208201905061140d60008301846111df565b92915050565b600060208201905061142860008301846111ee565b92915050565b6000602082019050818103600083015261144881846111fd565b905092915050565b6000602082019050818103600083015261146981611236565b9050919050565b6000602082019050818103600083015261148981611259565b9050919050565b600060208201905081810360008301526114a98161127c565b9050919050565b600060208201905081810360008301526114c98161129f565b9050919050565b600060208201905081810360008301526114e9816112c2565b9050919050565b60006020820190508181036000830152611509816112e5565b9050919050565b6000602082019050818103600083015261152981611308565b9050919050565b600060208201905081810360008301526115498161132b565b9050919050565b600060208201905081810360008301526115698161134e565b9050919050565b6000602082019050818103600083015261158981611371565b9050919050565b600060208201905081810360008301526115a981611394565b9050919050565b600060208201905081810360008301526115c9816113b7565b9050919050565b60006020820190506115e560008301846113da565b92915050565b600060208201905061160060008301846113e9565b92915050565b600081519050919050565b600082825260208201905092915050565b600061162d826116ea565b9150611638836116ea565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561166d5761166c611766565b5b828201905092915050565b6000611683826116ea565b915061168e836116ea565b9250828210156116a1576116a0611766565b5b828203905092915050565b60006116b7826116ca565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561171f578082015181840152602081019050611704565b8381111561172e576000848401525b50505050565b6000600282049050600182168061174c57607f821691505b602082108114156117605761175f611795565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611b20816116ac565b8114611b2b57600080fd5b50565b611b37816116ea565b8114611b4257600080fd5b5056fea2646970667358221220b6e1d0a161f632c4d0de674880be6897e07a5176c00c553b8cb90c1d39c65f9364736f6c63430008040033";

type RCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RCToken__factory extends ContractFactory {
  constructor(...args: RCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RCToken";
  }

  deploy(
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RCToken> {
    return super.deploy(_totalSupply, overrides || {}) as Promise<RCToken>;
  }
  getDeployTransaction(
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_totalSupply, overrides || {});
  }
  attach(address: string): RCToken {
    return super.attach(address) as RCToken;
  }
  connect(signer: Signer): RCToken__factory {
    return super.connect(signer) as RCToken__factory;
  }
  static readonly contractName: "RCToken";
  public readonly contractName: "RCToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RCTokenInterface {
    return new utils.Interface(_abi) as RCTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RCToken {
    return new Contract(address, _abi, signerOrProvider) as RCToken;
  }
}
